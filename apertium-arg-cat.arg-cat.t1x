<?xml version="1.0" encoding="UTF-8"?>
<transfer>
  <section-def-cats>
    <def-cat n="num">
      <cat-item tags="num.*"/>
    </def-cat>

    <def-cat n="adjec">
      <cat-item tags="adj.*"/>
      <cat-item tags="vblex.pp.*"/>
    </def-cat>

    <def-cat n="haver-pp">
      <cat-item tags="vbhaver.pp.*"/>
    </def-cat>

    <def-cat n="nom">
      <cat-item tags="n.*"/>
    </def-cat>

    <def-cat n="verb">
      <cat-item tags="vblex.*"/>
      <cat-item tags="vbser.*"/>
      <cat-item tags="vbmod.*"/>
      <cat-item tags="vaux.*"/>
    </def-cat>

    <def-cat n="perif">
      <cat-item tags="vblex.ifi.*"/>
      <cat-item tags="vbser.ifi.*"/>
      <cat-item tags="vbhaver.ifi.*"/>
      <cat-item tags="vbmod.ifi.*"/>
    </def-cat>

    <def-cat n="sent">
      <cat-item tags="sent"/>
    </def-cat>
  </section-def-cats>

  <section-def-attrs>
    <def-attr n="a_cas">
      <attr-item tags="nom"/>
    </def-attr>

    <def-attr n="a_verb">
      <attr-item tags="vblex"/>
      <attr-item tags="vbser"/>
      <attr-item tags="vbhaver"/>
      <attr-item tags="vbmod"/>
      <attr-item tags="vaux"/>
    </def-attr>

      <def-attr n="temps">
                        <attr-item tags="inf"/>
                        <attr-item tags="ger"/>
                        <attr-item tags="pp"/>
                        <attr-item tags="pri"/>
                        <attr-item tags="ifi"/>
                        <attr-item tags="pii"/>
                        <attr-item tags="fti"/>
                        <attr-item tags="cni"/>
                        <attr-item tags="prs"/>
                        <attr-item tags="pis"/>
                        <attr-item tags="fts"/>
                        <attr-item tags="imp"/>
                        <attr-item tags="infps"/>
                        <attr-item tags="pmp"/>
      </def-attr>

      <def-attr n="gen">
         <attr-item tags="sg"/>
         <attr-item tags="m"/>
         <attr-item tags="mf"/>
         <attr-item tags="f"/>
         <attr-item tags="GD"/>
      </def-attr>


      <def-attr n="nbr">
         <attr-item tags="sg"/>
         <attr-item tags="pl"/>
         <attr-item tags="sp"/>
         <attr-item tags="ND"/>
      </def-attr>

      <def-attr n="persona">
         <attr-item tags="p1"/>
         <attr-item tags="p2"/>
         <attr-item tags="p3"/>
      </def-attr>


  </section-def-attrs>

  <section-def-vars>
    <def-var n="numero"/>
    <def-var n="genero"/>
  </section-def-vars>

  <section-def-macros>

    <def-macro n="f_concord1" npar="1">
      
      <choose><!--To determine value of variables of gender and
		  number and propagate to other rules.  Variables are
		  not used again in this rule -->
	<when> 
	  <test>
	    <equal><clip pos="1" side="tl" part="gen"/><lit-tag v="m"/></equal>
	  </test>
	  <let><var n="genero"/><lit-tag v="m"/></let>
	</when>
	<when>
	  <test>
	    <equal><clip pos="1" side="tl" part="gen"/><lit-tag v="f"/></equal>
	  </test>
	  <let><var n="genero"/><lit-tag v="f"/></let>
	</when>
      </choose> 
      <choose>
	<when> 
	  <test>
	    <equal><clip pos="1" side="tl" part="nbr"/><lit-tag v="sg"/></equal>
	  </test>
	  <let><var n="numero"/><lit-tag v="sg"/></let>
	</when>
	<when> 
	  <test>
	    <equal><clip pos="1" side="tl" part="nbr"/><lit-tag v="pl"/></equal>
	  </test>
	  <let><var n="numero"/><lit-tag v="pl"/></let>
	</when>
      </choose>
      <choose>
	<when>
	  <test> <!-- If word has GD or ND, we try to assign the
		      gender or number of the previous rule. If there is no
		      value for the gender or number variable from previous
		      rules, gender will be masculine and number singular.-->
	    <equal><clip pos="1" side="tl" part="gen"/><lit-tag v="GD"/></equal>
	  </test>
	  <choose> 
	    <when>
	      <test>
		<equal><var n="genero"/><lit-tag v="f"/></equal>
	      </test>
	      <let><clip pos="1" side="tl" part="gen"/><lit-tag v="f"/></let>
	    </when>
	    <otherwise>
	      <let><clip pos="1" side="tl" part="gen"/><lit-tag v="m"/></let>
	    </otherwise>
	  </choose>
	</when>
      </choose>
      <choose>
	<when>
	  <test> 
	    <equal><clip pos="1" side="tl" part="nbr"/><lit-tag v="ND"/></equal>
	  </test>
	  <choose> 
	    <when>
	      <test>
		<equal><var n="numero"/><lit-tag v="pl"/></equal>
	      </test>
	      <let><clip pos="1" side="tl" part="nbr"/><lit-tag v="pl"/></let>                   
	    </when>
	    <otherwise>
	      <let><clip pos="1" side="tl" part="nbr"/><lit-tag v="sg"/></let>
	    </otherwise>
	  </choose>
	</when>
      </choose>    
    </def-macro>


  <def-macro n="f_pretind1" npar="1"><!--Para traducir el pretérito indefinido por la forma perifrástica (dije - vaig dir) y enviar el verbo. Debe ponerse en todas las reglas en las que aparezca un verbo vblex, vbmod o vbser -->
    <choose>
      <when>
        <test>
          <equal><clip pos="1" side="sl" part="temps"/><lit-tag v="ifi"/></equal>
        </test>
        <out>
          <lu>
            <get-case-from pos="1"><lit v="anar"/></get-case-from>
            <lit-tag v="vaux"/>
            <clip pos="1" side="sl" part="persona"/>
            <clip pos="1" side="sl" part="nbr"/>
          </lu>
          <b/>
        </out>
        <choose>
          <when>
            <test><equal><case-of pos="1" side="sl" part="lemh"/><lit v="Aa"/></equal></test>
            <modify-case><clip pos="1" side="tl" part="lemh"/><lit v="aa"/></modify-case>
          </when>
        </choose>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="a_verb"/>
            <lit-tag v="inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
      </when>
      <otherwise>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="tags"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
      </otherwise>
    </choose>
</def-macro>

  </section-def-macros>

  <section-rules>

    <rule comment="REGLA: ADJ">
      <pattern>
        <pattern-item n="adjec"/>
      </pattern>
      <action>
        <call-macro n="f_concord1">
          <with-param pos="1"/>
        </call-macro>
        <out>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="tags"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: NUM">
      <pattern>
        <pattern-item n="num"/>
      </pattern>
      <action>
        <call-macro n="f_concord1">
          <with-param pos="1"/>
        </call-macro>
        <out>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="tags"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: NOM">
      <pattern>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="f_concord1">
          <with-param pos="1"/>
        </call-macro>
        <out>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="tags"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: VERB">
      <pattern>
        <pattern-item n="verb"/>
      </pattern>
      <action>
        <call-macro n="f_pretind1">
          <with-param pos="1"/>
        </call-macro>
<!--    <out>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="tags"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
        </out>-->
      </action>
    </rule>

    <rule comment="REGLA: HAVER-PP">
      <pattern>
        <pattern-item n="haver-pp"/>
      </pattern>
      <action>
        <out>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <lit-tag v="vbhaver.pp.m.sg"/>
            </lu>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: SENT">
      <pattern>
        <pattern-item n="sent"/>
      </pattern>
      <action>
        <out>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
        </out>
      </action>
    </rule>
  </section-rules>
</transfer>

<!--
Resources:
    http://wiki.apertium.org/wiki/Chunking:_A_full_example
    http://wiki.apertium.org/wiki/Chunking
    http://wiki.apertium.org/wiki/Apertium_New_Language_Pair_HOWTO#Transfer_rules
    http://wiki.apertium.org/wiki/A_long_introduction_to_transfer_rules
    http://wiki.apertium.org/wiki/Transfer#Adding_structural_transfer_.28grammar.29_rules
-->

